// Author : Shubham Chaudhari
// Date : 09/01/2024
// Problem : 872. Leaf-Similar Trees
// Difficulty : Easy
// Problem Link : https://leetcode.com/problems/leaf-similar-trees/description/?envType=daily-question&envId=2024-01-09
// Video Solution : https://www.youtube.com/watch?v=FspU0spuVi4

// Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        
        vector<int> v1, v2;
        getNodes(root1, v1);
        getNodes(root2, v2);

        return (v1 == v2);

    }
private:
    void getNodes(TreeNode* node, vector<int>& arr){
        if(node == nullptr){
            return;
        }
        if(node->left == nullptr && node->right == nullptr){
            arr.push_back(node->val);
            return;
        }
        getNodes(node->left, arr);
        getNodes(node->right, arr);
    }
};
